[
{
	"uri": "/greengrass301/intro/",
	"title": "소개",
	"tags": [],
	"description": "",
	"content": "Introduction 이 워크샵을 통해 AWS Greengrass ML 추론 및 Amazon SageMaker의 개념을 배우고, Amazon SageMaker로 기계 학습 모델을 생성 및 모델을 Greengrass Core에 배포하고, Lambda 함수를 사용하여 Greengrass Core에서 ML 추론을 실행하는 방법을 실습에서 배울 수 있습니다.\n이 Workshop은 AWS Cloud9 환경 및 Amazon SageMaker 노트북 인스턴스를 사용하여 수행되도록 설계되었습니다.\nAWS Greengrass가 Cloud9 인스턴스에서 구성 및 실행됩니다.\nWorkshop 환경은 AWS CloudFormation으로 자동 생성됩니다.\nAmazon Linux가 Cloud9 및 SageMaker의 운영 체제로 사용되며 표준 사용자는 ec2-user입니다.\nAWS Cloud9에는 클라우드에서 소프트웨어를 코딩, 빌드, 실행, 테스트, 디버깅 및 릴리스하는 데 사용하는 도구 모음이 포함되어 있습니다. 이러한 도구를 사용하려면 AWS Cloud9 통합 개발 환경 또는 IDE를 사용하십시오. 또한 이 워크샵의 실습에 필요한 브라우저에서 셸(shell) 액세스를 제공합니다.\nCIFAR-10 데이터 세트를 기반으로 한 이미지 분류 모델은 Amazon SageMaker와 함께 훈련 된 후 AWS Greengrass에서 사용되어 에지에서 이미지 분류를 수행합니다. 실제 환경에서는 카메라가 연결된 장치를 사용하는 것이 좋습니다. Greengrass 소프트웨어를 실행하는 EC2 인스턴스에 카메라가 연결되어 있지 않기 때문에 정기적으로 스캔되는 디렉토리에 이미지를 복사하기만 하면 이미지가 자동 분류됩니다.\n준비사항  AWS 계정: 자원을 생성할 수 있는 권한이 필요합니다. 브라우저: 최신 버전의 크롬, 파이어폭스를 사용하세요.  관리자 권한이 있는 AWS 계정 노트북 브라우저\nWorkshop Content 이 세션은 엣지(edge)에서 머신 러닝 솔루션을 만드는 것에 관한 것입니다.\nAWS Greengrass는 연결된 디바이스에서 엣지(edge)에서 안전한 방식으로 로컬 컴퓨팅, 메시징, 데이터 캐싱, 동기화 및 ML 추론 기능을 실행할 수있는 소프트웨어입니다.\nAmazon SageMaker는 개발자와 데이터 과학자가 모든 규모의 기계 학습 모델을 쉽고 빠르게 구축, 교육 및 배포 할 수 있도록하는 완전히 관리되는 플랫폼입니다.\\\n이 workshop을 통하여\n Amazon SageMaker로 이미지를 분류하기 위해 머신 러닝 모델 트레이닝 Greengrass 그룹 프로비저닝 Amazon SageMaker로 훈련 된 모델을 AWS IoT Greengrass에 다운로드 AWS IoT Greengrass에서 사용할 AWS Lambda 함수 생성 Lambda 함수를 사용하여 Greengrass에서 이미지 분류를 수행하십시오. Lambda 함수는 Greengrass에 배포 된 모델을 로드합니다.  Architecture Introduction into Amazon SageMaker Amazon SageMaker는 완전히 관리되는 머신 러닝 서비스입니다. 데이터 과학자와 개발자는 Amazon SageMaker를 사용하여 기계 학습 모델을 쉽고 빠르게 구축 및 교육 한 후 프로덕션 환경에서 호스팅되는 환경에 직접 배포 할 수 있습니다. 탐색 및 분석을 위해 데이터 소스에 쉽게 액세스 할 수 있도록 통합 Jupyter 저작 노트북 인스턴스를 제공하므로 서버를 관리 할 필요가 없습니다. 또한 분산 환경에서 매우 큰 데이터에 대해 효율적으로 실행되도록 최적화된 공통 기계 학습 알고리즘을 제공합니다.\nIntroduction to AWS Greengrass AWS Greengrass는 AWS 클라우드 기능을 로컬 디바이스로 확장하여 해당 디바이스가 정보 소스에 더 가까운 데이터를 수집 및 분석하는 동시에 로컬 네트워크에서 서로 안전하게 통신 할 수 있는 소프트웨어입니다. 보다 구체적으로, AWS Greengrass를 사용하는 개발자는 클라우드에서 서버리스 코드 (AWS Lambda 함수)를 작성하여 애플리케이션의 로컬 실행을 위해 디바이스에 편리하게 배포할 수 있습니다.\nGreengrass Group AWS Greengrass 그룹 정의는 AWS Greengrass 핵심 장치 및 이와 통신하는 장치에 대한 설정 모음입니다. 다음 다이어그램은 AWS Greengrass 그룹을 구성하는 객체를 보여줍니다.\n "
},
{
	"uri": "/greengrass301/",
	"title": "홈",
	"tags": [],
	"description": "",
	"content": "AWS Greengrass Workshop 본 프로그램은 AWS Greengrass 서비스를 실제 실습할 수 있는 강의 교재 제공을 목표로 하고 있습니다.\n© 2020 Amazon Web Services, Inc. 또는 자회사, All rights reserved.\n"
},
{
	"uri": "/greengrass301/lab0/",
	"title": "Lab 1. CloudFormation을 활용한 AWS Resource 생성 (25분)",
	"tags": [],
	"description": "",
	"content": "CloudFormation을 활용한 AWS Resource 생성 이 워크샵에 필요한 AWS 리소스를 생성하기 위해 CloudFormation 스택을 제공합니다.\nCloudFormation 스택은 AWS Greengrass를 실행하는 데 사용될 EC2 인스턴스를 다른 리소스 중에서 생성합니다. 또한 SageMaker 노트북 인스턴스가 생성되고 부트 스트랩됩니다.\n아래 링크 중 하나를 선택하면 스택이 시작될 AWS 콘솔의 CloudFormation 으로 자동 redirection됩니다.\n Launch CloudFormation stack in eu-central-1 (Frankfurt) Launch CloudFormation stack in eu-west-1 (Ireland) Launch CloudFormation stack in us-east-1 (N. Virginia) Launch CloudFormation stack in us-west-2 (Oregon)  CloudFormation 스택은 최소한 다음 리소스를 만듭니다.\n SageMaker에 필요한 S3 버킷 EC2 및 SageMaker 인스턴스에 퍼블릭 서브넷 + 보안 그룹이있는 VPC Greengrass를 실행하고 Lambda 함수를 생성하는 Cloud9 인스턴스 Jupyter 노트북에서 모델을 정의하는 SageMaker 노트북 인스턴스. 모델 자체는 AWS SageMaker 서비스를 사용하여 학습됩니다. Cloud9 인스턴스의 인스턴스 프로파일 AWS 리소스에 액세스하는 데 필요한 IAM 역할  AWS CloudFormation 콘솔의 Quick create stack 페이지로 리디렉션 된 후 다음 단계를 수행하여 스택을 시작하십시오.\n EC2 Instance Type for Cloud9: (Optional) Cloud9 instance type을 선택합니다. 미리 설정된 m4.large을 사용하면 workshop을 실행하는 데에 충분합니다. EC2 Instance Type for Sagemaker: (Optional) SageMaker를 위한 instance type을 선택합니다. 미리 설정된 ml.t2.medium을 사용하면 workshop을 실행하는 데에 충분합니다. Capabilities 에서 I acknowledge that AWS CloudFormation might create IAM resources을을 체크합니다. Create stack 버튼을 누르고, stack 생성이 완료될 때까지 기다립니다. 10분 정도 소요됩니다.  CloudFormation 콘솔의 스택에 대한 Output 섹션에서 생성 된 리소스에 대한 정보르 찾을 수 있습니다. 언제든지 Output 섹션으로 돌아와서 값을 확인할 수 있습니다.\nCloud9 IDE에 접속 생성하신 GGMLWorkshop스택에서 CloudFormation 콘솔의 스택에 대한 Output 섹션을 확인합니다. Cloud9IDE 항목의 링크에서 오른쪽 마우스를 클릭하여 Open link in new tab선택합니다.\n하기 화면과 같은 Cloud9 instance로 이동됩니다.\nhome folder가 보여지도록 설정 Workshop에서 사용되는 많은 파일이 Cloud9 IDE에 복사되어 있습니다. 기본적으로 홈 폴더의 내용은 표시되지 않습니다. 따라서 이것을 변경해야합니다.\nOpen a Terminal Cloud9 IDE에서 terminal (shell)을 열기 위해서 Tab bar에서 +를 클릭하고 New Terminal을 선택합니다.\nCopying Files from/to the Cloud9 IDE Cloud9 IDE로 직접 또는 S3 버킷을 통해 간접적으로 파일을 업로드 할 수 있습니다. 워크숍 중에 나중에 Greengrass Core의 구성 파일을 Cloud9 인스턴스로 복사해야합니다.\nfile 업로드: File 메뉴에서 Upload Local Files\u0026hellip;선택 file 다운로드: filename 에서 오른쪽 마우스 클릭 \u0026gt; Download 클릭\nS3 CloudFormation 스택이 S3 버킷을 생성했습니다. CloudFormation 스택의 출력 섹션에서 버킷 이름을 찾을 수 있습니다. \u0026ldquo;$S3_BUCKET\u0026quot;이라는 셸(shell) 변수에도 버킷 이름이 있습니다.\nCloud9 IDE의 터미널에서 awscli를 사용하여 파일을 버킷에 복사하거나 버킷에서 복사합니다.\nbucket에서 파일 복사해 오기\naws s3 cp s3://$S3_BUCKET/my_object .\nbucket에 파일 복사하기\naws s3 cp my_file s3://$S3_BUCKET/my_file\n"
},
{
	"uri": "/greengrass301/lab1/",
	"title": "실습 2. Amazon SageMaker를 활용한 ML model Training (25분)",
	"tags": [],
	"description": "",
	"content": "Train a Model with Amazon SageMaker Amazon SageMaker에서 Jupyter 노트북을 사용하여 이미지 분류 모델을 학습합니다. 훈련된 모델은 나중에 AWS Greengrass에서 사용되어 엣지에서 로컬 이미지 분류를 수행합니다.\n생성된 SageMaker 인스턴스의 이름은 CloudFormation 스택의 출력 섹션에서 찾을 수 있습니다.\n노트북에 액세스하고 모델을 학습 시키려면 다음 단계를 실행하십시오.\nAccess the SageMaker Notebook Instance 생성하신 GGMLWorkshop스택에서 CloudFormation 콘솔의 스택에 대한 Output 섹션을 확인합니다. SageMakerInstance 항목의 링크에서 오른쪽 마우스를 클릭하여 Open link in new tab선택합니다.\nSageMaker instance로 이동됩니다. Greengrass-ML 폴더를 클릭합니다.\ngreengrass-ml_mxnet_cifar10_with_gluon_local.ipynb을 클릭하여 Jupyter notebook을 엽니다.\nJupyter notebook의 code를 실행하기 전에 Kernel을 \u0026lsquo;conda_amazonei_mxnet_p36'으로 변경합니다. 그리고, Model Training을 하기 위하여, notebook의 있는 내용대로 따라서 진행합니다.\nWorking with Jupyter notebooks 실행해야하는 코드가 포함 된 노트북의 셀(Cell)에는 좌측에 대괄호 []가 있습니다.\n[ ] 셀(Cell)이 실행되지 않았습니다\n[*] 셀(Cell)이 활성화되었습니다. 코드에 따라 셀을 실행하는 데 약간의 시간이 걸릴 수 있습니다\n[X] 여기서 X는 [6]과 같은 숫자이며, 셀의 코드가 실행되었음을 의미합니다.\ncell 실행 방법:\n화면 상단에 Run 사용\n키보드에서 \u0026lsquo;Ctrl+'을 입력\n"
},
{
	"uri": "/greengrass301/lab2/",
	"title": "실습3. Greengrass Group 생성 및 초기 설정 (25분)",
	"tags": [],
	"description": "",
	"content": "AWS Cloud에 Greengrass Group과 Core 생성 AWS Greengrass console로 이동한 후, Greengrass 메뉴를 클릭합니다. 새로운 Greengrass Group을 생성하기 위하여, 화면과 같이 Create a Group를 클릭합니다.\nGreengrass가 Lambda와 같은 다른 AWS Service에 잡근하기 위한 권한 부여에 대한 동의가 필요합니다. Grant permission 버튼을 클릭하여 권한 부여에 동의하시면 Greengrass_ServiceRole과 같은 이름의 Service Role이 생성되며, 작업에 필요한 역할(role)이 Service Role에 추가됩니다.\nGreengrass group을 셋업합니다. 여기서는 Use easy creation을 클릭합니다.\n생성할 Greengrass group의 이름을 지정합니다. 여기서는 greengrass-ml를 사용합니다. Next를 클릭하여, 다음 단계로 진행합니다.\nGreengrass Core를 생성합니다. 앞서 지정한 이름을 기반으로 greengrass-ml_Core 라는 이름이 자동 생성됩니다. Next를 클릭하여, 다음 단계로 진행합니다.\n\u0026lsquo;Run a scripted easy Group creation\u0026rsquo; 단계를 통하여, 나머지 단계를 진행합니다. Create Group and Core를 클릭합니다.\nDownload these resources as a tar.gz를 클릭하여, device를 cloud에 연결하기 위하여 필요한 public key, private key와 certificate를 다운로드 받습니다. 반드시, Finish를 클릭하여 Greengrass group과 core를 생성합니다.\nCreate a Greengrass Service Role IAM console로 이동합니다. 좌측 메뉴에서 Roles를 클릭합니다. 그리고, Create role 버튼을 클릭합니다.\nSelect type of trusted entity에서 AWS service를 선택하고, Choose the service that will use this role에서 Greengrass를 선택합니다. 그리고, Next: Permission를 클릭합니다.\nAttche permissions policies에서 AWSGreengrassResourceAccessRolePolicy를 선택합니다 (탐색 창에서 검색합니다). 그리고, Next: Tags를 클릭합니다.\nAdd tags (optional)를 통하여 tag를 추가할 수 있습니다. Next: Review를 클릭합니다.\nRole name에 GreengrassRole 을 입력하고, Create Role을 클릭합니다.\nIAM Role을 생성한 후 역할 ARN을 기록하고이를 사용하여 awscli 명령을 작성하십시오. IAM 콘솔에서 역할 arn을 찾을 수 있습니다.\nRole 메뉴의 검색 창에 위에서 생성한 GreengrassRole을 입력합니다.\nGreengrassRole을 클릭합니다.\n화면 상단에서 role arn을 찾을 수 있습니다.\nCloud9 터미널(terminal)에서 하기와 같은 명령으로 service role과 계정(account)을 연결합니다:\naws greengrass associate-service-role-to-account --role-arn arn:aws:iam::\u0026lt;YOUR_AWS_ACCOUNT_ID\u0026gt;:role/GreengrassRole\n아래는 예제입니다.\naws greengrass associate-service-role-to-account –role-arn arn:aws:iam::576184218696:role/GreengrassRole\n "
},
{
	"uri": "/greengrass301/lab3/",
	"title": "실습4. greengrass Core software 설치 및 로깅 활성화 (25분)",
	"tags": [],
	"description": "",
	"content": "Updating greengrass Core software Cloud9(EC2)에 이미 이전 버전의 greengrass core software가 설치되어 있습니다만, 이것을 최신 버전으로 업그레이드애 해야 됩니다.\n먼저, 이전 버전의 greengrass core software를 삭제합니다.\nsudo rm -rf /greengrass\n그리고, 최신 버전의 greengrass core software를 다운로드하고, 루트(/)에 압축 해제 합니다.\nwget https://d1onfpft10uf5o.cloudfront.net/greengrass-core/downloads/1.10.0/greengrass-linux-x86-64-1.10.0.tar.gz\rsudo tar -xzvf greengrass-linux-x86-64-1.10.0.tar.gz -C /\rJava 8 runtime (JDK 8) 설치 Cloud9(EC2)에 이미 이전 버전의 JDK가 이미 설치되어 있습니다만, 이것을 JDK 8 이상으로 업그레이드해야 합니다. Cloud9 terminal에서 아래와 같은 명령으로 이전 버전의 JDK를 삭제하고, JDK 8을 설치합니다.\nsudo yum remove java-1.7.0-openjdk\rsudo yum install java-1.8.0\rCloud9 terminal에서 다음 명령으로 JDK 버전이 1.8.0 이상인지 확인합니다.\njava -version\nCopy and unpack the tar.gz-file 다운로드 한 tar.gz 파일을 EC2 인스턴스에 복사 (Lab1의 마지막 부분에서 언급 한대로 S3 / Cloud9 IDE 사용)하십시오. tar.gz 파일의 이름은 -setup.tar.gz와 유사합니다. tar.gz 파일에는 Greengrass Core를 구성하는 데 사용될 키, 인증서 및 구성 파일 (config.json)이 포함되어 있습니다.\nCloud9 터미널에서 아래와 같은 명령으로 압축을 해제합니다.\nsudo tar zxvf \u0026lt;unique-string\u0026gt;-setup.tar.gz -C /greengrass/\rATS 루트 CA 인증서를 다운로드 ATS 앤드포인트에 접근하기 위하여 ATS 루트 CA 인증서를 다운로드합니다.\ncd /greengrass/certs/ sudo wget -O root.ca.pem https://www.amazontrust.com/repository/AmazonRootCA1.pem\rGreengrass Core 시작 이제 Greengrass Core를 시작할 준비가되었습니다.\nGreengrass Core를 시작하기 전에 AWS IoT Core console로 이동한 후 Test 메뉴를 이용하여, $aws/events/# 와 $aws/things/# 토픽을 구독 신청합니다.\nCloud9 terminal에서 아래 명령을 실행합니다.\ncd /greengrass/ggc/core\rsudo ./greengrassd start\r그리고, 다시 AWS IoT Core 콘솔에서 MQTT client의 출력을 확인합니다.\nGreengrass Core의 로그 디렉토리에 액세스하려면 root 사용자로 전환해야 합니다.\nsudo su -\rIn a Cloud9 terminal:\ncd /greengrass/ggc/var/log/system/\rtail -f *.log\rAWS Greengrass를 시작할 때 문제가 발생하면 \u0026ldquo;crash.log\u0026quot;파일에서 오류를 확인하십시오.\n/greengrass/ggc/var/log/crash.log\rEnable Logging for Greengrass Greengrass Core에는 기본적으로 로깅이 사용되지 않습니다. Core에서 발생하는 상황을 파악하고 문제 해결을 위해 로깅을 활성화해야합니다.\nGreengrass console로 이동한 후, Groups 메뉴를 선택합니다.\n그리고, 앞서 생성한 greengrass-ml을 클릭합니다.\nSettings를 클릭하고, 페이지를 아래로 스크롤합니다.\nLocal logs configuration 에서 Edit를 클릭합니다. Add another log type를 클릭합니다.\nUser Lambdas 와 Greengrass system 을 모두 체크하고 update를 클릭합니다.\n나머지 설정 값들은 default로 그대로 두고 Save를 클릭합니다. Greengrass Core의 Log files은 아래에 생성됩니다.\n Log directory: /greengrass/ggc/var/log System logs: /greengrass/ggc/var/log/system Lambda logs: /greengrass/ggc/var/log/user/\u0026lt;AWS_REGION\u0026gt;/\u0026lt;ACCOUNT_ID\u0026gt;  Greengrass Group을 만들거나 변경 한 후에는 구성을 Greengrass Core에 배포해야합니다.\n먼저 Cloud9 terminal에서 다음 명령을 실행합니다.\nsudo su -\rcd /greengrass/ggc/var/log/system\rtail -f localwatch/localwatch.log *.log\rGreengrass console로 이동한 후, Groups 메뉴를 선택합니다.\n그리고, 앞서 생성한 greengrass-ml을 클릭합니다.\nActions -\u0026gt; Deploy를 클릭합니다.\nAutomatic detection 을 클릭합니다.\n정상적으로 deploy가 완료되면, terminal에 새로운 로그가 보여집니다.\n "
},
{
	"uri": "/greengrass301/lab4/",
	"title": "실습5. ML-Inference Lambda 생성 및 image 분류(25분)",
	"tags": [],
	"description": "",
	"content": "Create ML-Inference Lambda 이제 Lambda 함수를 만들어야합니다. 이 Lambda 기능은 Greengrass Core에 배포됩니다. 이 기능은 SageMaker에서 이전에 학습한 기계 학습 모델을 로드합니다. 그런 다음 정기적으로 이미지 디렉토리를 스캔합니다. 이미지가 발견되면 모델별로 분류되어 결과가 클라우드로 전송됩니다.\nLambda 함수에는 나중에 연습에서 두 가지 리소스가 할당됩니다.\n 기계 학습 리소스 : 학습한 모델 볼륨 자원 (volume resource) : 이미지를 스캔하는 디렉토리  Greengrass에서 실행해야하는 Lambda 함수에는 버전이 있어야합니다. 버전 외에도 함수 별칭(alias)을 작성합니다.\nGreengrass의 요구 사항은 아니지만 Greengrass에서 리소스를 쉽게 할당하거나 구독을 만들 수 있습니다. 리소스/구독이 버전에 할당되면 새 버전의 Lambda를 배포할 때 업데이트해야 하는데, 별칭(alias)을 사용하면 이러한 번거로움을 피할 수 있습니다. 새 버전을 만든 경우 새 버전에 별칭(alias)만 지정하면 됩니다.\n여러분이 Lab 1에서 CloudFormation을 활용하여 생성한 EC2 인스턴스(Cloud9 IDE가 실행되는)에 함수를 작성하는 데 필요한 Lambda 함수 코드가 이미 준비되어 있습니다.\n먼저 Cloud9 IDE를 보시면, 이름이 GGMLInference 인 Lambda 함수가 이미 생성되어 있습니다. 그러나 기능을 수정해야 합니다.\nCloud9 IDE에서:\nAWS Resources 창이 표시되지 않으면 AWS Resources 버튼을 선택하십시오.\nAWS Resources 창의 Lambda 섹션을 확장하십시오. Local function 아래에 GGMLInference 함수가 있습니다.\n이제 기존 코드를 학습 한 모델을 사용하는 함수 코드로 바꿔야합니다. 코드는 이미 준비되어 있습니다.\nFAVOURITES 아래에서 ~를 확장하고 greengrass-ml 폴더를 찾습니다.\nlambda_function.py를 찾아서 오른쪽 마우스를 클릭 후 Open을 클릭하여 파일을 엽니다.\n방금 연 창에서 다른 lambda_function.py 창으로 코드를 복사하십시오.\n다른 창에 코드를 복사한 후, File -\u0026gt; Save를 클릭하여 함수를 저장합니다. 코드가 수정되면 Lambda 함수를 배포할 수 있습니다. 오른쪽 창의 GGMLInference 에서 우측 마우스를 클릭한 후 Deploy를 클릭합니다.\nLambda 함수는 cloud9-GGMLInference-GGMLInference-\u0026lt;unique_string\u0026gt;과 비슷한 이름으로 AWS Lambda 서비스에서 생성됩니다. 함수 이름 끝에있는 문자열은 고유하며 자동으로 생성됩니다.\nLambda 함수가 AWS Greengrass와 함께 작동하려면 버전과 선택적으로 별칭을 생성해야합니다. 오른쪽 창에서 GGMLInference에서 오른쪽 마우스를 클릭하고 Deploy를 클릭합니다.\nLambda 함수는 cloud9-GGMLInference-GGMLInference-\u0026lt;unique_string\u0026gt;과 비슷한 이름으로 AWS Lambda Service에서 생성됩니다. 함수 이름 끝에있는 문자열은 고유하며 자동으로 생성됩니다.\nLambda 함수가 AWS Greengrass와 함께 작동하려면 버전과 선택적으로 별칭을 생성해야합니다. 버전과 별칭(alias)을 만들기 위해서 AWS Lambda console로 이동합니다. 앞서 생성하 Lambda function을 찾아서 클릭합니다.\nActions에서 Publish new version을 선택합니다.\nVersion description은 그대로 비워 놓으셔도 됩니다. Publish를 클릭합니다.\n다시 Actions에서 Create alias을 선택합니다.\nName: dev, Version: 1 을 립력하고 Create를 클릭합니다.\nGreengrass Group에 ML-Inference Lambda 할당 Greengrass에서 Lambda 함수를 사용하려면 AWS Lambda에서 생성된 함수를 Greengrass Group에 할당해야 합니다.\nGreengrass의 Lambda 기능은 디렉토리에서 이미지를 정기적으로 스캔해야 하므로 long running function으로 구성됩니다.\nGreengrass console로 이동한 후, Groups 메뉴를 선택합니다.\n그리고, 앞서 생성한 greengrass-ml을 클릭합니다.\nLambdas를 선택하고, Add Lambda를 클릭합니다. Use existing Lambda를 클릭합니다.\n기존에 생성하신 cloud9-GGMLInference-GGMLInference-\u0026lt;unique_string\u0026gt; 형식의 lambda 함수를 선택합니다.\nAlias: dev를 선택하고 Finish를 클릭합니다.\n추가된 lambda에서 \u0026hellip;메뉴를 클릭하고 Edit configuration를 클릭합니다. Memory limit: 1024 MB 로 설정하고 Make this function long-lived and keep it running indefinitely를 선택하고, update를 클릭합니다.\nGreengrass Group에 Resources 할당 Lambda 함수에서 사용하려면 SageMaker를 사용하여 생성한 이미지 분류 모델을 Greengrass Group에 Machine Learning Resource로 할당해야합니다. 또한 이미지를 검색(scan)할 디렉토리는 로컬 자원으로 지정되어야 합니다.\nGreengrass console로 이동한 후, Groups 메뉴를 선택합니다.\n그리고, 앞서 생성한 greengrass-ml을 클릭합니다.\nResources를 클릭하고 Local탭에서 Add a local resource를 클릭합니다. 그리고, 아래와 같이 설정합니다.\n Resource name: ImageDirectory Check Volume에서  Source path: /greengrass-ml/images/cifar10 Destination path: /images   Automatically add OS group permissions of the Linux group that owns the resource을 선택 Lambda function affiliations 에서 cloud9-GGMLInference-GGMLInference-\u0026lt;unique_string\u0026gt;을 선택하고, Read and write access을 선택  Save를 클릭하여 변경 사항을 저장합니다. Machine Learning tab에서 Add a machine learning resource를 클릭합니다.  Resource name: ModelImageClassification Use a model trained in AWS SageMaker 선택 SageMaker model: SageMaker에서 모델을 학습하는 데 사용된 Traning job 이름을 선택하십시오. greengrass-ml-cifar10-year-month-day-hour-minute-second-millisecond와 같은 형식으로 보여집니다. Local path: /models/image-classification Lambda function affiliations: cloud9-GGMLInference-GGMLInference-\u0026lt;unique_string\u0026gt; 선택하고, Read-only access으로 그대로 둡니다.  Save를 클릭하여 변경 사항을 저장합니다.\n구독(Subscription) 생성 구독(subscription)은 소스(source), 대상(target) 및 주제 필터(topic filter)로 구성된 라우팅 규칙입니다. 구독(subscription)은 어떤 소스(source)가 어떤 주제(topic)와 통신할 수 있는지 정의합니다. 이미지 분류를 수행하는 Lambda 함수는 이미지를 찾거나 분류했을 때 메시지를 생성합니다. 이러한 메시지는 AWS 클라우드로 전송되어야 합니다.\nGreengrass console로 이동한 후, Groups 메뉴를 선택합니다.\n그리고, 앞서 생성한 greengrass-ml을 클릭합니다.\nSubscriptions을 선택하고, Add Subscription을 클릭합니다.\n다음과 같이 선택한 후, Next를 클릭합니다.\nSsource: Lambdas -\u0026gt; cloud9-GGMLInference-GGMLInference-\u0026lt;unique_string\u0026gt;\nTarget: Services -\u0026gt; IoT Cloud\ntopic filter: greengrass/ml/inference/# 와 같이 입력합니다(선택 사항)\nNext를 클릭합니다.\nFinish를 클릭합니다.\nActions -\u0026gt; Deploy를 클릭합니다.\n이미지 분류 Classify Images Lambda 함수는 5 초마다 /greengrass-ml/images/cifar10 디렉토리를 검색합니다. png 또는 jpg 형식의 이미지 이미지가 발견되면 ml 모델을 사용하여 분류됩니다. 분류 결과는 MQTT 메시지로 게시되고 AWS 클라우드로 전송됩니다.\nEC2 인스턴스에서 ~/greengrass-ml/images 디렉토리에 예제 이미지가 있습니다. Lambda가 스캔하는 디렉토리에 하나 이상의 이미지를 복사하고 AWS 클라우드에서 결과를 찾고 Lambda 함수의 로그 파일도 살펴보십시오.\nAWS IoT Core console로 이동 후에, Test 메뉴에서 다음 topic을 구독(subscribe)합니다.\n greengrass/ml/inference/#  Cloud9 terminal에서 (root user로) 하기 명령을 실행합니다:\nsudo su -\rcd /greengrass/ggc/var/log/user/[YOUR_AWS_REGION]/[YOUR_AWS_ACCOUNT_ID]\rtail -f cloud9-GGMLInference-GGMLInference-*.log 아래는 예제입니다.\nsudo su -\rcd /greengrass/ggc/var/log/user/us-west-2/576184218696\rtail -f cloud9-GGMLInference-GGMLInference-*.log Cloud9 terminal을 하나 더 추가하고 (ec2-user로) 하기 명령을 실행합니다:\ncd ~/greengrass-ml/images/\rsudo cp bird1.png /greengrass-ml/images/cifar10\rgreengrass/ml/inference/greengrass-ml_Core 주제(topic)에서 다음과 유사한 메시지를 수신해야 합니다.\n~/greengrass-ml/images/ 폴더 내의 다른 이미지를 사용하여 추가적인 테스트를 할 수 있습니다.\n airplane1.png automobile1.png bird1.png cat1.png deer1.png dog1.png frog1.png horse1.png plane-draw.jpeg ship1.png truck1.png   "
},
{
	"uri": "/greengrass301/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/greengrass301/credits/",
	"title": "Credit",
	"tags": [],
	"description": "",
	"content": "Original Author  Philipp Sacha (Specialist SA, IoT)  한글 번역 (Korean Translation)  이세현 (IoT Specialist SA)  "
},
{
	"uri": "/greengrass301/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]